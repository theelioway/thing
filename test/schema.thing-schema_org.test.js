"use strict"
const should = require("chai").should()
const fs = require("fs")

const ThingBuilder = require("../thing-builder")
const { getSchema, schemaDomainUrl } = require("../utils/get-schema")

let debug = true

before(() => {
  this.thingBuilder = new ThingBuilder(getSchema("9.0"), schemaDomainUrl)
  if (debug) this.jay = {}
})

after(() => {
  if (debug) fs.writeFileSync(`./expected.json`, JSON.stringify(this.jay))
})

for (let [model, tests] of Object.entries({
  Thing: {
    potentialAction: { type: "Text" },
    identifier: { type: "Text" },
    sameAs: { type: "URL" },
    url: { type: "URL" },
    image: { type: "URL" },
    alternateName: { type: "Text" },
    name: { type: "Text" },
    description: { type: "Text" },
    mainEntityOfPage: { type: "URL" },
    disambiguatingDescription: { type: "Text" },
    subjectOf: { type: "Text" },
    additionalType: { type: "URL" },
  },
  Action: {
    potentialAction: { type: "Text" },
    identifier: { type: "Text" },
    sameAs: { type: "URL" },
    url: { type: "URL" },
    image: { type: "URL" },
    alternateName: { type: "Text" },
    name: { type: "Text" },
    description: { type: "Text" },
    mainEntityOfPage: { type: "URL" },
    disambiguatingDescription: { type: "Text" },
    subjectOf: { type: "Text" },
    additionalType: { type: "URL" },
    engage: {
      Action: {
        instrument: { type: "Thing", foreign: true },
        endTime: { type: "Time" },
        participant: { type: "Text" },
        result: { type: "Thing", foreign: true },
        startTime: { type: "Time" },
        actionStatus: { type: "Text" },
        target: { type: "Text" },
        agent: { type: "Text" },
        error: { type: "Thing", foreign: true },
        location: { type: "Text" },
        object: { type: "Thing", foreign: true },
      },
    },
  },
  CreativeWork: {
    potentialAction: { type: "Text" },
    identifier: { type: "Text" },
    sameAs: { type: "URL" },
    url: { type: "URL" },
    image: { type: "URL" },
    alternateName: { type: "Text" },
    name: { type: "Text" },
    description: { type: "Text" },
    mainEntityOfPage: { type: "URL" },
    disambiguatingDescription: { type: "Text" },
    subjectOf: { type: "Text" },
    additionalType: { type: "URL" },
    engage: {
      CreativeWork: {
        typicalAgeRange: { type: "Text" },
        hasPart: { type: "CreativeWork", foreign: true },
        sdDatePublished: { type: "Date" },
        educationalLevel: { type: "Text" },
        releasedEvent: { type: "Text" },
        schemaVersion: { type: "Text" },
        contentLocation: { type: "Text" },
        locationCreated: { type: "Text" },
        aggregateRating: { type: "Text" },
        temporalCoverage: { type: "Text" },
        accessModeSufficient: { type: "Text" },
        accountablePerson: { type: "Text" },
        mainEntity: { type: "Thing", foreign: true },
        sdPublisher: { type: "Text" },
        spatialCoverage: { type: "Text" },
        reviews: { type: "Text" },
        exampleOfWork: { type: "CreativeWork", foreign: true },
        maintainer: { type: "Text" },
        editor: { type: "Text" },
        offers: { type: "Text" },
        discussionUrl: { type: "URL" },
        award: { type: "Text" },
        sdLicense: { type: "CreativeWork", foreign: true },
        copyrightHolder: { type: "Text" },
        accessibilityHazard: { type: "Text" },
        copyrightYear: { type: "Number" },
        awards: { type: "Text" },
        publisherImprint: { type: "Text" },
        commentCount: { type: "Text" },
        spatial: { type: "Text" },
        recordedAt: { type: "Text" },
        abstract: { type: "Text" },
        fileFormat: { type: "Text" },
        isPartOf: { type: "CreativeWork", foreign: true },
        temporal: { type: "Text" },
        accessibilitySummary: { type: "Text" },
        inLanguage: { type: "Text" },
        educationalAlignment: { type: "Text" },
        associatedMedia: { type: "Text" },
        funder: { type: "Text" },
        position: { type: "Text" },
        audio: { type: "Text" },
        workExample: { type: "CreativeWork", foreign: true },
        encoding: { type: "Text" },
        interactivityType: { type: "Text" },
        provider: { type: "Text" },
        character: { type: "Text" },
        sourceOrganization: { type: "Text" },
        audience: { type: "Text" },
        materialExtent: { type: "Text" },
        video: { type: "Text" },
        accessibilityFeature: { type: "Text" },
        publisher: { type: "Text" },
        text: { type: "Text" },
        publication: { type: "Text" },
        contributor: { type: "Text" },
        encodingFormat: { type: "Text" },
        review: { type: "Text" },
        accessibilityControl: { type: "Text" },
        license: { type: "CreativeWork", foreign: true },
        sponsor: { type: "Text" },
        encodings: { type: "Text" },
        about: { type: "Thing", foreign: true },
        isBasedOn: { type: "CreativeWork", foreign: true },
        creator: { type: "Text" },
        publishingPrinciples: { type: "CreativeWork", foreign: true },
        producer: { type: "Text" },
        correction: { type: "Text" },
        workTranslation: { type: "CreativeWork", foreign: true },
        mentions: { type: "Thing", foreign: true },
        contentReferenceTime: { type: "DateTime" },
        dateCreated: { type: "Date" },
        educationalUse: { type: "Text" },
        teaches: { type: "Text" },
        alternativeHeadline: { type: "Text" },
        datePublished: { type: "Date" },
        isAccessibleForFree: { type: "Boolean" },
        headline: { type: "Text" },
        translationOfWork: { type: "CreativeWork", foreign: true },
        acquireLicensePage: { type: "CreativeWork", foreign: true },
        conditionsOfAccess: { type: "Text" },
        citation: { type: "CreativeWork", foreign: true },
        accessibilityAPI: { type: "Text" },
        interactionStatistic: { type: "Text" },
        contentRating: { type: "Text" },
        accessMode: { type: "Text" },
        material: { type: "Text" },
        isFamilyFriendly: { type: "Boolean" },
        assesses: { type: "Text" },
        keywords: { type: "Text" },
        version: { type: "Text" },
        dateModified: { type: "Date" },
        learningResourceType: { type: "Text" },
        genre: { type: "Text" },
        creativeWorkStatus: { type: "Text" },
        pattern: { type: "Text" },
        editEIDR: { type: "Text" },
        author: { type: "Text" },
        size: { type: "Text" },
        translator: { type: "Text" },
        timeRequired: { type: "Text" },
        usageInfo: { type: "CreativeWork", foreign: true },
        isBasedOnUrl: { type: "CreativeWork", foreign: true },
        thumbnailUrl: { type: "URL" },
        expires: { type: "Date" },
        comment: { type: "Text" },
      },
    },
  },
  Event: {
    potentialAction: { type: "Text" },
    identifier: { type: "Text" },
    sameAs: { type: "URL" },
    url: { type: "URL" },
    image: { type: "URL" },
    alternateName: { type: "Text" },
    name: { type: "Text" },
    description: { type: "Text" },
    mainEntityOfPage: { type: "URL" },
    disambiguatingDescription: { type: "Text" },
    subjectOf: { type: "Text" },
    additionalType: { type: "URL" },
    engage: {
      Event: {
        maximumAttendeeCapacity: { type: "Text" },
        typicalAgeRange: { type: "Text" },
        organizer: { type: "Text" },
        attendees: { type: "Text" },
        aggregateRating: { type: "Text" },
        subEvents: { type: "Event", foreign: true },
        offers: { type: "Text" },
        workFeatured: { type: "Text" },
        inLanguage: { type: "Text" },
        funder: { type: "Text" },
        remainingAttendeeCapacity: { type: "Text" },
        maximumPhysicalAttendeeCapacity: { type: "Text" },
        audience: { type: "Text" },
        actor: { type: "Text" },
        performers: { type: "Text" },
        endDate: { type: "Date" },
        eventSchedule: { type: "Text" },
        doorTime: { type: "Time" },
        contributor: { type: "Text" },
        review: { type: "Text" },
        sponsor: { type: "Text" },
        about: { type: "Thing", foreign: true },
        subEvent: { type: "Event", foreign: true },
        location: { type: "Text" },
        recordedIn: { type: "Text" },
        composer: { type: "Text" },
        isAccessibleForFree: { type: "Boolean" },
        performer: { type: "Text" },
        attendee: { type: "Text" },
        workPerformed: { type: "Text" },
        eventStatus: { type: "Text" },
        director: { type: "Text" },
        duration: { type: "Text" },
        maximumVirtualAttendeeCapacity: { type: "Text" },
        translator: { type: "Text" },
        eventAttendanceMode: { type: "Text" },
        startDate: { type: "Date" },
        superEvent: { type: "Event", foreign: true },
        previousStartDate: { type: "Date" },
      },
    },
  },

  Audiobook: {
    potentialAction: { type: "Text" },
    identifier: { type: "Text" },
    sameAs: { type: "URL" },
    url: { type: "URL" },
    image: { type: "URL" },
    alternateName: { type: "Text" },
    name: { type: "Text" },
    description: { type: "Text" },
    mainEntityOfPage: { type: "URL" },
    disambiguatingDescription: { type: "Text" },
    subjectOf: { type: "Text" },
    additionalType: { type: "URL" },
    engage: {
      Audiobook: {
        readBy: { type: "Text" },
        duration: { type: "Text" },
      },
      Book: {
        isbn: { type: "Text" },
        abridged: { type: "Boolean" },
        bookEdition: { type: "Text" },
        bookFormat: { type: "Text" },
        illustrator: { type: "Text" },
        numberOfPages: { type: "Text" },
      },
      AudioObject: {
        caption: { type: "MediaObject", foreign: true },
        transcript: { type: "Text" },
      },
      CreativeWork: {
        typicalAgeRange: { type: "Text" },
        hasPart: { type: "CreativeWork", foreign: true },
        sdDatePublished: { type: "Date" },
        educationalLevel: { type: "Text" },
        releasedEvent: { type: "Text" },
        schemaVersion: { type: "Text" },
        contentLocation: { type: "Text" },
        locationCreated: { type: "Text" },
        aggregateRating: { type: "Text" },
        temporalCoverage: { type: "Text" },
        accessModeSufficient: { type: "Text" },
        accountablePerson: { type: "Text" },
        mainEntity: { type: "Thing", foreign: true },
        sdPublisher: { type: "Text" },
        spatialCoverage: { type: "Text" },
        reviews: { type: "Text" },
        exampleOfWork: { type: "CreativeWork", foreign: true },
        maintainer: { type: "Text" },
        editor: { type: "Text" },
        offers: { type: "Text" },
        discussionUrl: { type: "URL" },
        award: { type: "Text" },
        sdLicense: { type: "CreativeWork", foreign: true },
        copyrightHolder: { type: "Text" },
        accessibilityHazard: { type: "Text" },
        copyrightYear: { type: "Number" },
        awards: { type: "Text" },
        publisherImprint: { type: "Text" },
        commentCount: { type: "Text" },
        spatial: { type: "Text" },
        recordedAt: { type: "Text" },
        abstract: { type: "Text" },
        fileFormat: { type: "Text" },
        isPartOf: { type: "CreativeWork", foreign: true },
        temporal: { type: "Text" },
        accessibilitySummary: { type: "Text" },
        inLanguage: { type: "Text" },
        educationalAlignment: { type: "Text" },
        associatedMedia: { type: "Text" },
        funder: { type: "Text" },
        position: { type: "Text" },
        audio: { type: "Text" },
        workExample: { type: "CreativeWork", foreign: true },
        encoding: { type: "Text" },
        interactivityType: { type: "Text" },
        provider: { type: "Text" },
        character: { type: "Text" },
        sourceOrganization: { type: "Text" },
        audience: { type: "Text" },
        materialExtent: { type: "Text" },
        video: { type: "Text" },
        accessibilityFeature: { type: "Text" },
        publisher: { type: "Text" },
        text: { type: "Text" },
        publication: { type: "Text" },
        contributor: { type: "Text" },
        encodingFormat: { type: "Text" },
        review: { type: "Text" },
        accessibilityControl: { type: "Text" },
        license: { type: "CreativeWork", foreign: true },
        sponsor: { type: "Text" },
        encodings: { type: "Text" },
        about: { type: "Thing", foreign: true },
        isBasedOn: { type: "CreativeWork", foreign: true },
        creator: { type: "Text" },
        publishingPrinciples: { type: "CreativeWork", foreign: true },
        producer: { type: "Text" },
        correction: { type: "Text" },
        workTranslation: { type: "CreativeWork", foreign: true },
        mentions: { type: "Thing", foreign: true },
        contentReferenceTime: { type: "DateTime" },
        dateCreated: { type: "Date" },
        educationalUse: { type: "Text" },
        teaches: { type: "Text" },
        alternativeHeadline: { type: "Text" },
        datePublished: { type: "Date" },
        isAccessibleForFree: { type: "Boolean" },
        headline: { type: "Text" },
        translationOfWork: { type: "CreativeWork", foreign: true },
        acquireLicensePage: { type: "CreativeWork", foreign: true },
        conditionsOfAccess: { type: "Text" },
        citation: { type: "CreativeWork", foreign: true },
        accessibilityAPI: { type: "Text" },
        interactionStatistic: { type: "Text" },
        contentRating: { type: "Text" },
        accessMode: { type: "Text" },
        material: { type: "Text" },
        isFamilyFriendly: { type: "Boolean" },
        assesses: { type: "Text" },
        keywords: { type: "Text" },
        version: { type: "Text" },
        dateModified: { type: "Date" },
        learningResourceType: { type: "Text" },
        genre: { type: "Text" },
        creativeWorkStatus: { type: "Text" },
        pattern: { type: "Text" },
        editEIDR: { type: "Text" },
        author: { type: "Text" },
        size: { type: "Text" },
        translator: { type: "Text" },
        timeRequired: { type: "Text" },
        usageInfo: { type: "CreativeWork", foreign: true },
        isBasedOnUrl: { type: "CreativeWork", foreign: true },
        thumbnailUrl: { type: "URL" },
        expires: { type: "Date" },
        comment: { type: "Text" },
      },
      MediaObject: {
        endTime: { type: "Time" },
        contentSize: { type: "Text" },
        embedUrl: { type: "URL" },
        width: { type: "Text" },
        uploadDate: { type: "Date" },
        startTime: { type: "Time" },
        playerType: { type: "Text" },
        height: { type: "Text" },
        bitrate: { type: "Text" },
        requiresSubscription: { type: "Boolean" },
        regionsAllowed: { type: "Text" },
        encodingFormat: { type: "Text" },
        contentUrl: { type: "URL" },
        associatedArticle: { type: "Text" },
        productionCompany: { type: "Text" },
        duration: { type: "Text" },
        encodesCreativeWork: { type: "CreativeWork", foreign: true },
      },
    },
  },

  ArriveAction: {
    potentialAction: { type: "Text" },
    identifier: { type: "Text" },
    sameAs: { type: "URL" },
    url: { type: "URL" },
    image: { type: "URL" },
    alternateName: { type: "Text" },
    name: { type: "Text" },
    description: { type: "Text" },
    mainEntityOfPage: { type: "URL" },
    disambiguatingDescription: { type: "Text" },
    subjectOf: { type: "Text" },
    additionalType: { type: "URL" },
    engage: {
      ArriveAction: {},
      MoveAction: {
        toLocation: { type: "Text" },
        fromLocation: { type: "Text" },
      },
      Action: {
        instrument: { type: "Thing", foreign: true },
        endTime: { type: "Time" },
        participant: { type: "Text" },
        result: { type: "Thing", foreign: true },
        startTime: { type: "Time" },
        actionStatus: { type: "Text" },
        target: { type: "Text" },
        agent: { type: "Text" },
        error: { type: "Thing", foreign: true },
        location: { type: "Text" },
        object: { type: "Thing", foreign: true },
      },
    },
  },
})) {
  describe(`class | ThingBuilder | ${model} modelMaker schemaorg 9.0`, () => {
    for (let [depth, expectModelMade] of Object.entries(tests)) {
      it(`${model} at depth ${depth}`, () => {
        let opts = { depth: depth, comment: false }
        let modelsMined = this.thingBuilder.modelMiner([model], opts)
        let thing = this.thingBuilder.thing(model, modelsMined, opts)
        thing.should.be.eql(expectModelMade)
      })
    }
  })
}
